Objectives:
  - Build and deploy an app in RHOCP using the provided JSON template

# Must have To Do List app source code and lab files on workstation

[student@workstation ~]$ lab multicontainer-openshift start

# Load the env variables from the first exercise
[student@workstation ~]$ source /usr/local/etc/ocp4.config

# Login
[student@workstation ~]$ oc login -u ${RHT_OCP4_DEV_USER} \
>  -p ${RHT_OCP4_DEV_PASSWORD} ${RHT_OCP4_MASTER_API}

# Create a new project 'template' in OpenShift
[student@workstation ~]$ oc new-project ${RHT_OCP4_DEV_USER}-template

# Open and examine the template in your editor at /home/student/DO180/labs/multicontainer-openshift/todo-template.json

# Process the template and create the app resources
# This template requires the Quay.io namespace to retrieve the images
# Use the pipe command to send the result to the oc create command
[student@workstation ~]$ cd /home/student/DO180/labs/multicontainer-openshift
[student@workstation multicontainer-openshift]$ oc process \
-f todo-template.json | oc create -f -

# Review the status of the deployment using get pods -w to monitor the pod status (may take some time for the pods to start)
[student@workstation multicontainer-openshift]$ oc get pods -w
# Ctrl+C to exit

# Connect to the MySQL database server and populate the data to the item db

# From workstation, configure port forwarding between workstation and the db pod running on OpenShift using port 3306
[student@workstation multicontainer-openshift]$ oc port-forward mysql 3306:3306

# From workstation, open another termainl and populate the data to the MySQL server using the MySQL client
[student@workstation ~]$ cd /home/student/DO180/labs/multicontainer-openshift
[student@workstation multicontainer-openshift]$ mysql -uuser1 \
-h 127.0.0.1 -pmypa55 -P3306 items < db.sql

# Close the terminal and return to the previous one
# Finish the port forwarding process by Ctrl+C

# Allow the To Do List app to be accessible through the OpenShift router and be available as a public FQDN
# Use oc expose to expose the todoapi service
[student@workstation multicontainer-openshift]$ oc expose service todoapi

# Test the FQDN of the app and note the FQDN
[student@workstation multicontainer-openshift]$ oc status | grep -o "http:.*com"
# http://todoapi-${RHT_OCP4_DEV_USER}-template.${RHT_OCP4_WILDCARD_DOMAIN}

# Curl to test the REST API for the To Do List app
# -w stands for write-out or short
# -w "\n" lets the shell prompt appear at the next line instead of merging with the output in the same line
[student@workstation multicontainer-openshift]$ curl -w "\n" \
> $(oc status | grep -o "http:.*com")/todo/api/items/1
# {"id":1,"description":"Pick up newspaper","done":false}

# Change to the student directory
[student@workstation multicontainer-openshift]$ cd ~
[student@workstation ~]$

# Open Firefox on workstation and point the browser to http://todoapi-${RHT_OCP4_DEV_USER}-template.${RHT_OCP4_WILDCARD_DOMAIN}/todo/

[student@workstation ~]$ lab multicontainer-openshift finish






