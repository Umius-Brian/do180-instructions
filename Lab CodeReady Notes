eval $(crc oc-env)
eval $(crc podman-env)

# Install all your environment tools including Podman and runtime
sudo yum module install container-tools

# podman images is a non-root command
# podman ps just shows running containers, whereas podman ps -a shows all containers (running and used to run)
# system containers starts a service and then waits until you tell it to stop, unless all other containers
# podman logs containername to analyze if a container needs additional env variables
# all containers run off of the base OS Linux kernel
# ConfigMaps allow a better way to run with env variables

# man <command>
man -k podman
# man /examples
man podman-run

# To find operating system
cat /etc/os-release 
# To find kernel
uname -r

# Use podman inspect frequently to learn more about images
podman inspect ubi8 | less

# To list more details about images
podman search --no-trunc ubi8

# To list details about an image before pulling it
skopeo inspect docker://registry.access.redhat.com/ubi8/ubi-minimal

# To list details on disk about an image 
podman image inspect <image_id>

# Make a backup copy
podman save -o myimage.tar <image_id>
ls -l (to show image in local files)

# Rootless containers do not get an IP address, cannot bind to privileged ports, and have limited access to fs
# Default in OpenShift

# Inspect latest with formatting
podman inspect -l -f "{{.Images}}"

# To view containers from host OS pov
ps fax | less and look for processes that are started by runc

# /etc/containers/registries.conf file is used to access registries
# [registries.search] for default registries
# [registries.insecure] for private registries not protected with TLS keys

# podman login -u {redhat email} registry.access.redhat.com to login to Red Hat registry at registry.access.redhat.com
# podman login registry.redhat.io
# Then enter obfuscated password

# podman save to save an image to a .tar file
podman save quay.io/bitnami/nginx:latest -o mysql.tar
# To load an image from a tar file
podman load -i mysql.tar

# Another example of saving to a .tar file
# -l means long list
podman image save docker.io/nginx -o /tmp/nginx.tar
ls -l /tmp/nginx.tar

# To retrieve info about specific image version
# Need to install skopeo first
skopeo inspect

# Podman inspect only works after pulling

# Run podman diff to get a list of differences between the running container and original image
# Then run podman commit to apply modifications to images
# Dockerfile is preferred though
podman commit <old_image> <new_image_name>

# Lab
# Ensure you are logged in to all registries required to use podman
podman login registry.redhat.io
# Search for info on ubi8
podman search
# Download the image you found and make a backup copy
podman save -o <image.tar> <image_id>
ls -l
# Investigate image contents
podman image inspect
# Remove image from local image list
podman rmi
podman image ls
# Restore backup you previously created
podman load -i <image.tar>
