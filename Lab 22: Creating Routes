Objectives:
  - Expose services using OpenShift routes

# Services allow for network access between pods inside an OpenShift instance
# Routes allow for network access to pods from users and applications outside the OpenShift instance
# Router pods run inside infra nodes from within a cluster and connect to services
# Pods, services, and routes are all connected to SDN

# Routes connect a public-facing IP and DNS host name to an internal-facing service IP
# It uses the exposed ports from the service to find endpoints
# HAProxy is the default routing service pod
# To improve performance and reduce latency, the router connects directly to pods using SDN

# Public DNS host names configured for routes need to point to the nodes' public-facing IP addresses running on the router
# Router pods, unlike regular pods, bind their nodes' public IP addresses instead of internal pod SDN

# Within the resource definition, under spec, the DNS must resolve the host value to the IP address of the router
# The "to" object states the resource the route is pointing to
# Unlike services, which uses labels and selectors, routes point directly to the service resource name

# To create a route, provide a resource definition file to oc create; oc new-app does not know about routes

# Another way is to use oc expose service command, passing a service resource name as the input using --name option to control the route resource name
oc expose service quotedb --name quote

# By default, oc expose generates DNS names in the form route-name-project-name.default-domain
# Route-name is the name assigned to the route (if no name, defaults to service name)
# Project-name is the name of the project containing the resource
# Default-domain is configured on the control plane and corresponds to the wildcard DNS domain listed as a prereq for installing OpenShift

# To create a route named quote
# In a project named test
# From an OpenShift instance where the wildcard domain is cloudapp.example
# The OpenShift router blocks invalid wildcard domain host names that do not correspond to any route (returns 404)
quote-test.cloudapps.example.com

# To inspect router pods (can also query using the label)
oc get pod --all-namespaces | grep router
# openshift-ingress  router-default-746b5cfb65-f6sdm 1/1    Running  1         4d

oc describe pod router-default-746b5cfb65-f6sdm

# The default domain (subdomain) in all default routes takes its value from ROUTER_CANONICAL_HOSTNAME





