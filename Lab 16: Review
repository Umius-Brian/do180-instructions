Objectives:
  - Create a custom image and manage images

[student@workstation ~]$ lab image-review start

# Download quay.io/redhattraining/nginx:1.17 image and ensure that you have done successfully
[student@workstation ~]$ podman pull quay.io/redhattraining/nginx:1.17
[student@workstation ~]$ podman images

# Start a new container using the Nginx image with the given name, background daemon, image name, port forwarding
[student@workstation ~]$ podman run --name official-nginx \
> -d -p 8080:80 quay.io/redhattraining/nginx:1.17

# Login to container and replace index.html file contents with DO180; web server directory is located at /usr/share/nginx/html
# Then exit the container and access the web page
[student@workstation ~]$ podman exec -it official-nginx /bin/bash
# root@b9d5739af239:/#
root@b9d5739af239:/# echo 'DO180' > /usr/share/nginx/html/index.html
root@b9d5739af239:/# exit
[student@workstation ~]$ curl 127.0.0.1:8080
# DO180

# Stop the running container and commit changes to a new image
# Give the new image the name do180/mynginx and tag v1.0-SNAPSHOT
[student@workstation ~]$ podman stop official-nginx
[student@workstation ~]$ podman commit -a 'YOUR_NAME' \
> official-nginx do180/mynginx:v1.0-SNAPSHOT
[student@workstation ~]$ podman images

# Start a new container with the updated image with the given
[student@workstation ~]$ podman run --name official-nginx-dev \
> -d -p 8080:80 do180/nginx:v1.0-SNAPSHOT

# Log into the container and replace contents of /usr/share/nginx/html/index.html with DO180 Page
# Verify the changes
[student@workstation ~]$ podman exec -it official-nginx-dev /bin/bash
# root@cfa21f02a77d:/#
root@cfa21f02a77d:/# echo 'DO180 Page' > /usr/share/nginx/html/index.html
root@cfa21f02a77d:/# exit
[student@workstation ~]$ curl 127.0.0.1:8080
# DO180 Page

# Stop the container and commit changes to a new image with the name do180/mynginx and tag v1.0
[student@workstation ~]$ podman stop official-nginx-dev
[student@workstation ~]$ podman commit --name 'Your Name' \
> official-nginx-dev do180/mynginx:v1.0
[student@workstation ~]$ podman images

# Remove the snapshot image from local storage
# However, despite official-nginx-dev being stopped, it is still present; remove it
[student@workstation ~]$ podman ps -a \
> --format="{{.ID}} {{.Names}} {{.Status}}"
[student@workstation ~]$ podman rm official-nginx-dev

# Verify that the container has been deleted
[student@workstation ~]$ podman ps -a \
> --format="{{.ID}} {{.Names}} {{.Status}}"

# Remove the snapshot image
[student@workstation ~]$ podman rmi do180/mynginx:v1.0-SNAPSHOT

# Verify that it has been deleted
[student@workstation ~]$ podman images

# Use the do180/mynginx:v1.0 image to create a new container with the given specifications
[student@workstation ~]$ podman run -d --name my-nginx \
> -p 8280:80 do180/mynginx:v1.0
[student@workstation ~]$ curl 127.0.0.1:8280

[student@workstation ~]$ lab image-review grade
[student@workstation ~]$ lab image-review finish